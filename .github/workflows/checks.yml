name: CI

on:
  push:
    branches: [ "main", "develop"]
  pull_request:
    branches: [ "main" , "develop"]

jobs:
  Check:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.11, 3.12]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Lint with Ruff
        uses: chartboost/ruff-action@v1
        with:
          version: 0.3.2
          src: './auth-service'
          args: --line-length 79
      
      - name: Run MyPy with HTML report
        uses: jpetrucciani/mypy-check@master
        with:
          requirements: lxml==5.1.0
          mypy_flags: '--config-file .mypy.ini --html-report coverage_report'

      - name: Upload HTML report
        uses: actions/upload-artifact@v4
        with:
          name: mypy-coverage-report
          path: coverage_report
          
  Notify:
    runs-on: ubuntu-latest
    needs: Check
    if: ${{ always() }}
    steps:
      - name: Set message
        id: set_message
        #           ref_name=$(basename ${{ github.event.pull_request.head.ref }})
        run: |
          ref_name=${{ github.ref_name }}
          if [[ "${{ needs.linters.result }}" == 'failure' ]]; then
            echo "MESSAGE=${{ vars.PROJECT_NAME }}: Pipeline for ${ref_name} finished with error." >> $GITHUB_ENV
          else
            echo "MESSAGE=${{ vars.PROJECT_NAME }}: Pipeline for ${ref_name} finished successfully." >> $GITHUB_ENV
          fi
        shell: bash

      - name: Debug message
        run: |
          echo "Debug: Message is: $MESSAGE"
      - name: Send message
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: ${{ env.MESSAGE }}